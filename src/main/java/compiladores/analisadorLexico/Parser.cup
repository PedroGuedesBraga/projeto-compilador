package compiladores.analisadorLexico;

import java_cup.runtime.*;
import java.util.*;
import java.io.*;

parser code {:

    public void report_error(String message, Object info)  {
        System.out.println("Warning - " + message);
    }

    public void report_fatal_error(String message, Object info)  {
        System.out.println("Error - " + message);
        System.exit(-1);
    }

:};

terminal PROGRAM, BEGIN, END, IDENTIFIER, PLUS, MINUS, MULT, DIV, ASSIGNMENT, COMMA, DOT,
SEMICOLON, COLON, OPEN_PARENTHESES, CLOSE_PARENTHESES, OPEN_BRACKETS, CLOSE_BRACKETS, OPEN_CURLY_BRACKETS,
CLOSE_CURLY_BRACKETS, CRASIS, AND, ARRAY, CASE, CONST, INTEGER_DIV, DO, DOWNTO, ELSE, FILE, FOR,
FUNCTION, GOTO, IF, IN, LABEL, MOD, NIL, NOT, OF, OR, PACKED, PROCEDURE, RECORD, REPEAT, SET,
THEN, TO, TYPE, UNTIL, VAR, WHILE, WITH, INTEGER, GT, GE, EQ, LE, LT, TRUE, FALSE, BOOLEAN, TYPE_INTEGER, STRING;

non terminal program, declarations, empty, constants, variables, variable, procedures, constant, number, type_variable;

start with program;


program ::= PROGRAM IDENTIFIER SEMICOLON declarations BEGIN END DOT;
empty ::= ;
declarations ::= declarations constants | declarations variables | empty;
constants ::= constants constant;
constant ::= CONST IDENTIFIER ASSIGNMENT number SEMICOLON;
variables ::= variables variable;
variable ::= VAR IDENTIFIER COLON type_variable SEMICOLON;
type_variable ::= BOOLEAN | TYPE_INTEGER | STRING;
number ::= INTEGER | INTEGER DOT INTEGER;









 



